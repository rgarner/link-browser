// Generated by CoffeeScript 1.3.3
(function() {
  var LinkEnumerator;

  LinkEnumerator = (function() {

    function LinkEnumerator() {}

    LinkEnumerator.newTab = function(href) {
      return chrome.tabs.create({
        url: href
      });
    };

    LinkEnumerator.addLink = function(root, linkTag) {
      var _class;
      _class = linkTag.rel === 'alternate' ? 'class="alternate"' : null;
      return $('#links').append("<tr>\n  <td " + _class + ">" + linkTag.rel + "</td>\n  <td><a href=\"" + linkTag.href + "\" title=\"" + linkTag.title + "\">" + linkTag.href + "</a></td>\n  <td>" + linkTag.type + "</td>\n  <td>" + linkTag.media + "</td>\n</tr>");
    };

    LinkEnumerator.addListOfLinks = function() {
      return chrome.tabs.getSelected(null, function(tab) {
        return chrome.tabs.sendMessage(tab.id, {
          askFor: 'links'
        }, function(linkTags) {
          var linkTag, root, td, _i, _len;
          root = document.getElementById('links');
          if (linkTags == null) {
            td = $b(root).append($b('tr').append($b('td', 'No link tags found.')));
            return;
          }
          linkTags.sort(function(a, b) {
            if (a.rel === b.rel) {
              return 0;
            }
            if (a.rel === 'alternate') {
              return -1;
            }
            if (a.rel >= b.rel) {
              return 1;
            } else {
              return -1;
            }
          });
          for (_i = 0, _len = linkTags.length; _i < _len; _i++) {
            linkTag = linkTags[_i];
            LinkEnumerator.addLink(root, linkTag);
          }
          return $('#links a').click(function() {
            console.log($(this));
            chrome.tabs.create({
              url: $(this).attr('href')
            });
            return false;
          });
        });
      });
    };

    return LinkEnumerator;

  })();

  document.addEventListener('DOMContentLoaded', function() {
    return LinkEnumerator.addListOfLinks();
  });

}).call(this);
